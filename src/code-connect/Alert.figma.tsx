import Alert from "../../lib/components/Alert/Alert"
import figma from "@figma/code-connect"

/**
 * -- This file was auto-generated by Code Connect --
 * `props` includes a mapping from your code props to Figma properties.
 * You should check this is correct, and update the `example` function
 * to return the code example you'd like to see in Figma
 */

figma.connect(
  Alert,
  "https://www.figma.com/design/fHb0XUhWXZErq97C6N9uG3/-BETA--Dashboard-Design-System?node-id=3168%3A5087",
  {
    props: {
      // These props were automatically mapped based on your linked code:
      type: figma.enum("type", {
        primary: "primary",
        success: "success",
        purple: "purple",
        warning: "warning",
        neutral: "neutral",
        error: "error",
        orange: "orange",
      }),
      style: figma.enum("style", {
        fill: "fill",
        subtle: "subtle",
        noFill: "noFill",
      }),
      actionPlacement: figma.enum("actionPlacement", {
        bottom: "bottom",
        right: "right",
      }),
      description: figma.string("description"),
      hasCloseIcon: figma.boolean("hasCloseIcon"),
      hasMainIcon: figma.boolean("hasMainIcon"),
      icon: figma.enum("actionPlacement", {
        bottom: "button",
        right: "g",
      }),
      // No matching props could be found for these Figma properties:
      // "description": figma.string('description'),
      // "heading": figma.string('heading'),
      // "hasCloseIcon": figma.boolean('hasCloseIcon'),
      // "hasAction": figma.boolean('hasAction'),
      // "hasHeading": figma.boolean('hasHeading'),
      // "mainIcon": figma.instance('mainIcon'),
      // "hasMainIcon": figma.boolean('hasMainIcon'),
      // "actionButtons": figma.enum('actionButtons', {
      //   "2": "2",
      //   "1": "1"
      // })
    },
    example: (props) => (
      <Alert
        type={props.type}
        style={props.style}
        actionPlacement={props.actionPlacement}
        description={props.description}
        hasCloseIcon={props.hasCloseIcon}
        hasMainIcon={props.hasMainIcon}
        icon={props.icon}
      />
    ),
  },
)
